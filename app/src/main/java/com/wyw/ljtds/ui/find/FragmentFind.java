package com.wyw.ljtds.ui.find;import android.app.Activity;import android.app.Dialog;import android.content.Context;import android.content.Intent;import android.graphics.Color;import android.net.Uri;import android.os.Bundle;import android.os.CountDownTimer;import android.os.Parcelable;import android.support.annotation.Nullable;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.Window;import android.view.WindowManager;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.bigkoo.convenientbanner.ConvenientBanner;import com.bigkoo.convenientbanner.holder.CBViewHolderCreator;import com.chad.library.adapter.base.BaseQuickAdapter;import com.chad.library.adapter.base.BaseViewHolder;import com.chad.library.adapter.base.listener.OnItemClickListener;import com.facebook.drawee.view.SimpleDraweeView;import com.google.gson.internal.ObjectConstructor;import com.squareup.picasso.MemoryPolicy;import com.squareup.picasso.Picasso;import com.sunfusheng.marqueeview.MarqueeView;import com.wyw.ljtds.MainActivity;import com.wyw.ljtds.R;import com.wyw.ljtds.adapter.goodsinfo.NetworkImageHolderView;import com.wyw.ljtds.biz.biz.HomeBiz;import com.wyw.ljtds.biz.exception.BizFailure;import com.wyw.ljtds.biz.exception.ZYException;import com.wyw.ljtds.biz.task.BizDataAsyncTask;import com.wyw.ljtds.config.AppConfig;import com.wyw.ljtds.model.AddressModel;import com.wyw.ljtds.model.GoodsModel;import com.wyw.ljtds.model.HomePageModel;import com.wyw.ljtds.model.MyLocation;import com.wyw.ljtds.model.NewsModel;import com.wyw.ljtds.model.SingleCurrentUser;import com.wyw.ljtds.ui.base.BaseActivity;import com.wyw.ljtds.ui.base.BaseFragment;import com.wyw.ljtds.ui.category.ActivityScan;import com.wyw.ljtds.ui.goods.ActivityMedicineList;import com.wyw.ljtds.ui.goods.ActivityMedicinesInfo;import com.wyw.ljtds.ui.goods.SelDefaultAddressFragment;import com.wyw.ljtds.ui.goods.ShopActivity;import com.wyw.ljtds.ui.home.ActivityHomeWeb;import com.wyw.ljtds.ui.home.ActivitySearch;import com.wyw.ljtds.ui.home.HuoDongActivity;import com.wyw.ljtds.ui.user.ActivityMessage;import com.wyw.ljtds.ui.user.address.AddressSelActivity;import com.wyw.ljtds.ui.goods.PointShopMedicineActivity;import com.wyw.ljtds.utils.GsonUtils;import com.wyw.ljtds.utils.StringUtils;import com.wyw.ljtds.utils.ToastUtil;import com.wyw.ljtds.utils.Utils;import com.wyw.ljtds.widget.MyScrollView;import org.xutils.view.annotation.ContentView;import org.xutils.view.annotation.Event;import org.xutils.view.annotation.ViewInject;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import java.util.Map;/** * Created by Administrator on 2016/12/9 0009. */@ContentView(R.layout.fragment_find)public class FragmentFind extends BaseFragment {    //基本静态数据    final int HBASE = 1000 * 60 * 60;    final int DBASE = 24 * HBASE;    private CountDownTimer timer;    //    public static final String TAG_FIND_MTD = "com.wyw.ljtds.ui.find.FragmentFind.TAG_FIND_MTD";    public static final String FIND_MTD_QUICK = "1";    public static final String FIND_MTD_QUICK2 = "0";    private static final int REQUEST_CHANGE_LOCATION = 1;    private static final int REQUEST_SEL_LOCATION = 2;    private static final String DIALOG_SEL_ADDR = "DIALOG_SEL_ADDR";    @ViewInject(R.id.fragment_find_ryv_icons)    private RecyclerView rycIcons; //功能图标列表    @ViewInject(R.id.fragment_find_ryv_adv)    private RecyclerView rycAdv; //底部广告    @ViewInject(R.id.fragment_find_ryv_huodong_icons)    private RecyclerView rycHuodongIcons; //活动图标    @ViewInject(R.id.fragment_find_sr)    SwipeRefreshLayout srf;    @ViewInject(R.id.main_header_location)    TextView tvLocation;    @ViewInject(R.id.ll_message)    private LinearLayout llMsg;    @ViewInject(R.id.fragment_find_ll_commoncat)    private LinearLayout llCommonCat;    @ViewInject(R.id.fragment_find_huodong_iconlist2)    private LinearLayout llHuodong;    @ViewInject(R.id.sv)    private MyScrollView myScrollView;    @ViewInject(R.id.llHeadr)    private LinearLayout header;    @ViewInject(R.id.banner)    private ConvenientBanner banner; //轮播图    @ViewInject(R.id.fragment_find_ryv_qianggou)    private RecyclerView rycQiangou; //一起抢区域    @ViewInject(R.id.fragment_find_ryv_recommand)    private RecyclerView rycTuijianCat;    @ViewInject(R.id.fragment_find_ryv_recommandComm)    private RecyclerView ryvRecommandComm;    @ViewInject(R.id.fragment_find_huodong_title)    private ImageView ivHuodongTitle;    @ViewInject(R.id.fragment_find_iv_iconlist_bg)    private ImageView ivHuodongIconListBg;    @ViewInject(R.id.fragment_find_iv_daojishi_bg)    private ImageView ivHuodongDaoji;    @ViewInject(R.id.fragment_find_iv_gonggao_bg)    private ImageView ivGonggaoBg;    @ViewInject(R.id.fragment_find_iv_gonggao)    private ImageView ivGonggao;    @ViewInject(R.id.fragment_find_huodong_xinren)    private ImageView ivHuodongXinren;    int[] iconListArr2 = {R.id.fragment_find_huodong_iv_icon1, R.id.fragment_find_huodong_iv_icon2, R.id.fragment_find_huodong_iv_icon3, R.id.fragment_find_huodong_iv_icon4, R.id.fragment_find_huodong_iv_icon5};    int[] iconListbgArr2 = {R.drawable.bg_index_left_top, R.drawable.bg_index_right_top, R.drawable.bg_index_right_top, R.drawable.bg_index_left_bottom, R.drawable.bg_index_right_bottom};    /*@ViewInject(R.id.sdv_head_img1)    private ImageView simpleDraweeView1; //大幅广告图片    @ViewInject(R.id.sdv_head_img2)    private ImageView simpleDraweeView2;    @ViewInject(R.id.sdv_head_img3)    private ImageView simpleDraweeView3;*/    @ViewInject(R.id.marqueeView)    private MarqueeView marqueeView;    @ViewInject(R.id.fragment_find_index_daojishi)    LinearLayout llDaojishi;    @ViewInject(R.id.fragment_find_index_daojishi_tian)    TextView tvDaojiDay;    @ViewInject(R.id.fragment_find_index_daojishi_xiaoshi)    TextView tvDaojiShi;    @ViewInject(R.id.fragment_find_index_daojishi_fen)    TextView tvDaojiFen;    @ViewInject(R.id.fragment_find_index_daojishi_miao)    TextView tvDaojiMiao;    //咨询客服 的图标按钮    @ViewInject(R.id.fragment_find_btn_consult)//    private FloatingActionButton btnConsult;    private ImageView btnConsult;    // 轮播部分    private List<String> mList;    //广播部分    private List<String> data;    //活动药品    private List<HomePageModel.DETAILS> list;    private HuodongCommsAdapter huodongCommAdapter;    //推荐药品    private List<HomePageModel.CLASS> list1;    //推荐药品的类别    private TuijianCommCatAdapter tuijianCatAdapter;    private List<HomePageModel.DETAILS> list2;    private TuijianCommAdapter tuijianAdapter;    private MainActivity activity;    private String index = "";//推荐分类选中    private HomePageModel homePageData;    private Dialog dialogConsult;    @Event(value = {R.id.ll_search, R.id.zxing, R.id.ll_message, R.id.button1, R.id.button2, R.id.button3,            R.id.sel_yigan, R.id.sel_yangwei,            R.id.sel_fengshi, R.id.sel_xiaochuan, R.id.sel_tuofa, R.id.sel_yiyu, R.id.tv_jt_djs})    private void onclick(View view) {        Intent it;        String classId = "";        switch (view.getId()) {            case R.id.ll_search:                it = new Intent(getActivity(), ActivitySearch.class);                it.putExtra("from", 0);                startActivity(it);                break;            case R.id.zxing:                startActivity(new Intent(getActivity(), ActivityScan.class));                break;            case R.id.ll_message:                startActivity(ActivityMessage.getIntent(getActivity()));                break;            case R.id.sel_fengshi:                classId = "2695";                it = ActivityMedicineList.getIntent(getActivity(), FIND_MTD_QUICK, "", classId, "");                startActivity(it);                break;            case R.id.sel_xiaochuan:                classId = "3716";                it = ActivityMedicineList.getIntent(getActivity(), FIND_MTD_QUICK, "", classId, "");                startActivity(it);                break;            case R.id.sel_tuofa:                classId = "3714";                it = ActivityMedicineList.getIntent(getActivity(), FIND_MTD_QUICK, "", classId, "");                startActivity(it);                break;            case R.id.sel_yiyu:                classId = "2699";                it = ActivityMedicineList.getIntent(getActivity(), FIND_MTD_QUICK, "", classId, "");                startActivity(it);                break;            case R.id.tv_jt_djs:                //活动 --- 更多                Integer[] tps = Utils.range(9, 19);                String tpflgs = Utils.join(tps, ",");                Utils.log("tpflgs" + tpflgs);                it = ActivityMedicineList.getIntent(getActivity(), "0", tpflgs, "", "");                startActivity(it);                break;            default:                break;        }    }    //滑动改变状态栏标题栏    @Event(value = R.id.sv, type = MyScrollView.ScrollViewListener.class)    private void scrollListenter(MyScrollView scrollView, int x, int y, int oldx, int oldy) {//        Log.d("alan", "oldy--->" + oldy);//        Log.d("alan", "y---->" + y);        int ivHeight = banner.getHeight();        if (y <= 0) {            header.setBackgroundColor(Color.TRANSPARENT);        } else if (y < ivHeight) {            float scale = (float) y / (float) ivHeight;            float alpha = 255 * scale;            // TODO: 2016/9/3 注释里面的方法也可以实现//            llHeader.setBackgroundColor(Color.argb((int) alpha, 144, 151, 166));            //先设置一个背景，然后在让背景乘以透明度            header.setBackgroundColor(getResources().getColor(R.color.base_bar));            header.getBackground().setAlpha((int) alpha);        } else if (y >= ivHeight) {//            llHeader.setAlpha(1);//            llHeader.setBackgroundColor(Color.argb((int) 255, 144, 151, 166));            header.setBackgroundColor(getResources().getColor(R.color.base_bar));        }    }    @Override    public void onAttach(Context context) {        super.onAttach(context);        activity = (MainActivity) context;    }    @Override    public void onActivityCreated(@Nullable Bundle savedInstanceState) {        super.onActivityCreated(savedInstanceState);        srf.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                getHome();                srf.setRefreshing(false);            }        });        //confirm addr        SelDefaultAddressFragment frag = SelDefaultAddressFragment.newInstance();        frag.setTargetFragment(this, REQUEST_SEL_LOCATION);        frag.show(getActivity().getSupportFragmentManager(), DIALOG_SEL_ADDR);        tvLocation.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent it = AddressSelActivity.getIntent(getActivity(), true);                startActivityForResult(it, REQUEST_CHANGE_LOCATION);            }        });//        Utils.setIconText(getActivity(), tvYqq, "\ue660");        myScrollView.setVerticalScrollBarEnabled(false);        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getActivity());//必须有        linearLayoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);//设置方向滑动        rycQiangou.setLayoutManager(linearLayoutManager);        huodongCommAdapter = new HuodongCommsAdapter();        huodongCommAdapter.openLoadAnimation(BaseQuickAdapter.ALPHAIN);        rycQiangou.setAdapter(huodongCommAdapter);        rycQiangou.addOnItemTouchListener(new OnItemClickListener() {            @Override            public void SimpleOnItemClick(BaseQuickAdapter baseQuickAdapter, View view, int i) {                HomePageModel.DETAILS detail = huodongCommAdapter.getData().get(i);//                Intent it = ActivityMedicinesInfo.getIntent(getActivity(), detail.getWAREID(), detail.getLOGISTICS_COMPANY_ID());                Intent it = ActivityMedicinesInfo.getIntent(getActivity(), detail.getWAREID(), "");                startActivity(it);            }        });        LinearLayoutManager linearLayoutManager1 = new LinearLayoutManager(getActivity());//必须有        linearLayoutManager1.setOrientation(LinearLayoutManager.HORIZONTAL);//设置方向滑动        rycTuijianCat.setLayoutManager(linearLayoutManager1);        tuijianCatAdapter = new TuijianCommCatAdapter();        rycTuijianCat.setAdapter(tuijianCatAdapter);        LinearLayoutManager linearLayoutManager2 = new LinearLayoutManager(getActivity());//必须有        linearLayoutManager2.setOrientation(LinearLayoutManager.HORIZONTAL);//设置方向滑动        ryvRecommandComm.setLayoutManager(linearLayoutManager2);        setLocation();        tuijianAdapter = new TuijianCommAdapter();        ryvRecommandComm.setAdapter(tuijianAdapter);        ryvRecommandComm.addOnItemTouchListener(new OnItemClickListener() {            @Override            public void SimpleOnItemClick(BaseQuickAdapter baseQuickAdapter, View view, int i) {                HomePageModel.DETAILS comm = tuijianAdapter.getData().get(i);                Intent it = ActivityMedicinesInfo.getIntent(getActivity(), comm.getWAREID(), comm.getLOGISTICS_COMPANY_ID());                startActivity(it);            }        });        rycTuijianCat.addOnItemTouchListener(new OnItemClickListener() {            @Override            public void SimpleOnItemClick(BaseQuickAdapter baseQuickAdapter, View view, int i) {                index = tuijianCatAdapter.getData().get(i).getCLASSCODE();                tuijianCatAdapter.notifyDataSetChanged();                list2 = tuijianCatAdapter.getData().get(i).getDETAILS();                tuijianAdapter.setNewData(list2);                tuijianAdapter.notifyDataSetChanged();            }        });        marqueeView.setOnItemClickListener(new MarqueeView.OnItemClickListener() {            @Override            public void onItemClick(int position, TextView textView) {                Intent it = new Intent(getActivity(), ActivityHomeWeb.class);                if (homePageData == null) return;                if (homePageData.getNews() == null) return;                List<NewsModel> news = homePageData.getNews();                it.putExtra(AppConfig.IntentExtraKey.Home_News, news.get(position % news.size()).getSUMMARY());                startActivity(it);            }        });        btnConsult.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                int[] point = new int[2];                v.getLocationOnScreen(point);                FragmentFind.this.showConsultImtes(point[0], point[1]);            }        });        //活动入口 图片数据//        GridLayoutManager glm = new GridLayoutManager(getActivity(), 2);//        rcHuodong.setLayoutManager(glm);//        updHuodongAdapter();    }//    private void updHuodongAdapter() {//        IconListAdapter myAdapter;//        ArrayList<IConCatInfo> lsHuodongImg = new ArrayList<>();////        IConCatInfo i1 = new IConCatInfo();//        i1.setImgPath(AppConfig.IMAGE_PATH_LJT + "/.system_1/img_shenghuo_active.jpg");//        lsHuodongImg.add(i1);////        IConCatInfo i2 = new IConCatInfo();//        i2.setImgPath(AppConfig.IMAGE_PATH_LJT + "/.system_1/img_shenghuo_active.jpg");//        lsHuodongImg.add(i2);////        IConCatInfo i3 = new IConCatInfo();//        i3.setImgPath(AppConfig.IMAGE_PATH_LJT + "/.system_1/img_shenghuo_active.jpg");//        lsHuodongImg.add(i3);////        IConCatInfo i4 = new IConCatInfo();//        i4.setImgPath(AppConfig.IMAGE_PATH_LJT + "/.system_1/img_shenghuo_active.jpg");//        lsHuodongImg.add(i4);////        myAdapter = new IconListAdapter(lsHuodongImg);//        rcHuodong.setAdapter(myAdapter);//    }    @Override    public void onHiddenChanged(boolean hidden) {        super.onHiddenChanged(hidden);        if (hidden) {            if (dialogConsult != null) {                dialogConsult.dismiss();            }            if (marqueeView != null) {                marqueeView.stopFlipping();            }        } else {            setLocation();        }    }    @Override    public void onStart() {        super.onStart();        Utils.log(this.getClass().getSimpleName() + " onStart ");        marqueeView.startFlipping();        //开始自动翻页        banner.startTurning(3000);    }    @Override    public void onStop() {        super.onStop();        marqueeView.stopFlipping();        //停止翻页        banner.stopTurning();        if (dialogConsult != null) {            dialogConsult.dismiss();        }    }    //更改数据  刷新页面    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        Log.e(AppConfig.ERR_TAG, "onActivityResult:");        if (resultCode == Activity.RESULT_OK) {            switch (requestCode) {                case REQUEST_CHANGE_LOCATION:                    //完成地址或                    if (data != null) {                        Parcelable paddr = data.getParcelableExtra(AddressSelActivity.TAG_SELECTED_ADDRESS);                        if (paddr != null) {                            AddressModel addr = (AddressModel) paddr;                            if (addr != null) {                                Log.e(AppConfig.ERR_TAG, "getADDRESS_LOCATION:" + addr.getADDRESS_LOCATION());                                String sLoc = addr.getADDRESS_LOCATION();                                StringBuilder err = new StringBuilder();                                MyLocation loc = AddressModel.parseLocation(err, sLoc);                                loc.setADDRESS_ID(addr.getADDRESS_ID() + "");                                if (err.length() > 0) {                                    ToastUtil.show(getActivity(), err.toString());                                    return;                                }                                SingleCurrentUser.location = loc;                            }                        }                    }                    tvLocation.setText(SingleCurrentUser.location.getAddrStr());                    getHome();                    break;                case REQUEST_SEL_LOCATION:                    if (data == null) {                        //选择其他地址                        Intent it = AddressSelActivity.getIntent(getActivity(), true);                        startActivityForResult(it, REQUEST_CHANGE_LOCATION);                    }                    break;            }        }    }    /**     * 获取首页数据     */    private void getHome() {        setLoding(getActivity(), false);        new BizDataAsyncTask<HomePageModel>() {            @Override            protected HomePageModel doExecute() throws ZYException, BizFailure {                return HomeBiz.getHome();            }            @Override            protected void onExecuteSucceeded(HomePageModel homePageModel) {                closeLoding();                homePageData = homePageModel;                //功能图标列表//                rycIcons                GridLayoutManager layoutManger = new GridLayoutManager(getActivity(), 4);                rycIcons.setLayoutManager(layoutManger);                IconListAdapter ilAdapter = new IconListAdapter(getActivity(), homePageModel.getIconImgsList());                rycIcons.setAdapter(ilAdapter);                //底部广告                LinearLayoutManager advLLM = new LinearLayoutManager(getActivity());//必须有                advLLM.setOrientation(LinearLayoutManager.VERTICAL);//设置方向滑动                rycAdv.setLayoutManager(advLLM);                AdvListAdapter advAdapter = new AdvListAdapter(getActivity(), homePageModel.getEndGoodsImgsList());                rycAdv.setAdapter(advAdapter);                //活动版块1                rycHuodongIcons.setVisibility(View.GONE);                if (homePageModel.getActiveListImg() != null && homePageModel.getActiveListImg().size() > 0) {                    Map<String, Object> item = homePageModel.getActiveListImg().get(0);                    if ("0".equals((String) item.get("delFlg"))) {                        LinearLayoutManager huodongIconLLM = new LinearLayoutManager(getActivity());//必须有                        huodongIconLLM.setOrientation(LinearLayoutManager.HORIZONTAL);//设置方向滑动                        rycHuodongIcons.setLayoutManager(huodongIconLLM);                        HuodongListAdapter hlAdapter = new HuodongListAdapter(getActivity(), homePageModel.getActiveListImg());                        rycHuodongIcons.setAdapter(hlAdapter);                        rycHuodongIcons.setVisibility(View.VISIBLE);                    }                }                //活动版块2                llHuodong.setVisibility(View.GONE);                llCommonCat.setVisibility(View.VISIBLE);                List<Map<String, Object>> activeListTwoImg = homePageData.getActiveListTwoImg();                if (activeListTwoImg != null && activeListTwoImg.size() > 0) {                    Map<String, Object> firstItem = activeListTwoImg.get(0);                    if ("0".equals((String) firstItem.get("delFlg"))) {                        llHuodong.setVisibility(View.VISIBLE);                        llCommonCat.setVisibility(View.GONE);                        for (int i = 0; i < iconListArr2.length; i++) {                            ImageView iv = (ImageView) findViewById(iconListArr2[i]);                            handleHuodongImg(activeListTwoImg.get(i), iv, iconListbgArr2[i]);                        }                    }                }                //首页轮播图                mList = new ArrayList<>();                List<Map> img = homePageModel.getHeadImgsList();                if (img != null) {                    for (int i = 0; i < img.size(); i++) {                        String imgSrc = (String) img.get(i).get("headImgsUrl");                        if (!StringUtils.isEmpty(imgSrc)) {                            mList.add(imgSrc);                        }                    }                }                //设置两个点图片作为翻页指示器，不设置则没有指示器，可以根据自己需求自行配合自己的指示器,不需要圆点指示器可用不设                if (mList != null && !mList.isEmpty()) {                    banner.setPageIndicator(new int[]{R.mipmap.ic_page_indicator, R.mipmap.ic_page_indicator_focused});                    banner.setPageIndicatorAlign(ConvenientBanner.PageIndicatorAlign.CENTER_HORIZONTAL);                    banner.setPages(new CBViewHolderCreator() {                        @Override                        public Object createHolder() {                            return new NetworkImageHolderView();                        }                    }, mList);                    Utils.log("getHeadImgsList:" + GsonUtils.Bean2Json(homePageData.getHeadImgsList()));                    //{"flg":"X","headId":"","headImgsUrl":"http://www.lanjiutian.com/upload/images/ef4118c10a1b432ba4e31b674d7f582c/d2a57dc1d883fd21fb9951699df71cc7.jpg"}                    banner.setOnItemClickListener(new com.bigkoo.convenientbanner.listener.OnItemClickListener() {                        @Override                        public void onItemClick(int position) {                            Map<String, String> mItem = homePageData.getHeadImgsList().get(position);                            handleIconClick(mItem);                        }                    });                }                //广播新闻                data = new ArrayList<>();                final int textLen = 22;                for (int i = 0; i < homePageModel.getNews().size(); i++) {                    NewsModel news = homePageModel.getNews().get(i);                    String eli = news.getTITLE_SUMMARY();                    if (eli.length() > textLen) {                        eli = eli.substring(0, textLen) + "...";                    }                    data.add(news.getTITLE() + "\n" + eli);                }                marqueeView.startWithList(data);                //抢购//                snapUpCountDownTimerView.setTime( 1, 59, 59 );//设置倒计时//                //开始倒计时//                snapUpCountDownTimerView.start();                list = homePageModel.getActiveComms();                huodongCommAdapter.setNewData(list);                huodongCommAdapter.notifyDataSetChanged();                //推荐药品                index = homePageModel.getRecommendComms().get(0).getCLASSCODE();                list1 = homePageModel.getRecommendComms();                tuijianCatAdapter.setNewData(list1);                tuijianCatAdapter.notifyDataSetChanged();                list2 = homePageModel.getRecommendComms().get(0).getDETAILS();                tuijianAdapter.setNewData(list2);                tuijianAdapter.notifyDataSetChanged();//                活动期间显示的样式                // 氛围装饰图                handleHuodongImg(homePageData.getAtmosphereImg(), ivHuodongTitle, R.drawable.img_huodong_title);                // 功能图标背景图                handleHuodongImg(homePageData.getIconBackImg(), ivHuodongIconListBg, R.drawable.bg_iconlist);                // 活动结束倒计时背景图                handleHuodongImg(homePageData.getActiveEndImg(), ivHuodongDaoji, R.drawable.bg_huodong_daojishi);                // 公告背景图                if (homePageData.getNewsBackImg() != null && !"0".equals(homePageData.getNewsBackImg().get("delFlg"))) {                    ivGonggao.setVisibility(View.VISIBLE);                } else {                    ivGonggao.setVisibility(View.GONE);                }                handleHuodongImg(homePageData.getNewsBackImg(), ivGonggaoBg, R.drawable.bg_index_gonggao);                // 新人专享图                handleHuodongImg(homePageData.getNewlywedsImg(), ivHuodongXinren, R.drawable.img_index_sdv);                //倒计时                Map<String, Object> daojishiData = homePageData.getActiveEndImg();                if (daojishiData != null) {                    if ("0".equals(daojishiData.get("delFlg"))) {                        llDaojishi.setVisibility(View.VISIBLE);                        Double oSpan = (Double) daojishiData.get("activeEndTime");                        Long lSpan = 0l;                        if (oSpan != null) {                            lSpan = Math.round(oSpan);                        }                        Utils.log("activeEndTime:" + lSpan);                        //倒计时                        timer = new CountDownTimer(lSpan, 1000) {                            @Override                            public void onTick(long millisUntilFinished) {                                int myD = (int) ((millisUntilFinished / DBASE)); //小时                                int myH = (int) ((millisUntilFinished / HBASE) % 24); //小时                                int myM = (int) ((millisUntilFinished / 1000 / 60) % 60); //分钟                                int myS = (int) ((millisUntilFinished / 1000) % 60); //秒                                String sD = Utils.leftPad(myD + "", "0", 2);                                String sH = Utils.leftPad(myH + "", "0", 2);                                String sM = Utils.leftPad(myM + "", "0", 2);                                String sS = Utils.leftPad(myS + "", "0", 2);                                tvDaojiDay.setText(sD);                                tvDaojiShi.setText(sH);                                tvDaojiFen.setText(sM);                                tvDaojiMiao.setText(sS);                            }                            @Override                            public void onFinish() {                            }                        };                        timer.start();                    } else {                        llDaojishi.setVisibility(View.GONE);                    }                }                /*eor (int i = 0; i < homePageModel.getAdvImgsList().size(); i++) {                    final Map<String, String> advItem = homePageModel.getAdvImgsList().get(i);                    String imgPath = advItem.get("headImgsUrl");                    if (StringUtils.isEmpty(imgPath)) return;                    switch (i) {                        case 0:                            Picasso.with(getActivity()).load(Uri.parse(imgPath)).memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE).placeholder(R.drawable.img_adv_zhanwei).into(simpleDraweeView1);                            simpleDraweeView1.setOnClickListener(new View.OnClickListener() {                                @Override                                public void onClick(View v) {                                    handleIconClick(advItem);                                }                            });                            break;                        case 1:                            Picasso.with(getActivity()).load(Uri.parse(imgPath)).memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE).placeholder(R.drawable.img_adv_zhanwei).into(simpleDraweeView2);                            simpleDraweeView2.setOnClickListener(new View.OnClickListener() {                                @Override                                public void onClick(View v) {                                    handleIconClick(advItem);                                }                            });                            break;                        case 2:                            Picasso.with(getActivity()).load(Uri.parse(imgPath)).memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE).placeholder(R.drawable.img_adv_zhanwei).into(simpleDraweeView3);                            simpleDraweeView3.setOnClickListener(new View.OnClickListener() {                                @Override                                public void onClick(View v) {                                    handleIconClick(advItem);                                }                            });                            break;                    }                }*/            }            @Override            protected void OnExecuteFailed() {                closeLoding();                //停止倒计时//                snapUpCountDownTimerView.stop();            }        }.execute();    }    private class HuodongCommsAdapter extends BaseQuickAdapter<HomePageModel.DETAILS> {        public HuodongCommsAdapter() {            super(R.layout.item_find_snap, list);        }        @Override        protected void convert(BaseViewHolder baseViewHolder, HomePageModel.DETAILS activeComms) {            baseViewHolder.setText(R.id.name, StringUtils.deletaFirst(activeComms.getWARENAME()))                    .setText(R.id.money, "￥" + Utils.formatFee(activeComms.getSALEPRICE() + ""));            String topFlg = activeComms.getTOP_FLG();            baseViewHolder.setVisible(R.id.fragment_find_huodong_logo_jifen, false);            baseViewHolder.setVisible(R.id.fragment_find_huodong_logo_tejia, false);            baseViewHolder.setVisible(R.id.fragment_find_huodong_logo_manzeng, false);            switch (topFlg) {                case GoodsModel.HUODONG_JIFEN:                    baseViewHolder.setVisible(R.id.fragment_find_huodong_logo_jifen, true);                    baseViewHolder.setText(R.id.money, "￥" + Utils.formatFee(activeComms.getSALEPRICE() + "") + " + " + activeComms.getCOST_POINT() + "积分");                    break;                case GoodsModel.HUODONG_TEJIA:                    baseViewHolder.setVisible(R.id.fragment_find_huodong_logo_tejia, true);                    break;            }            if (Arrays.asList(GoodsModel.HUODONG_MANZENG).contains(topFlg)) {                baseViewHolder.setVisible(R.id.fragment_find_huodong_logo_manzeng, true);            }            SimpleDraweeView simpleDraweeView = baseViewHolder.getView(R.id.head_img);            if (!StringUtils.isEmpty(activeComms.getIMG_PATH())) {//                Log.e(AppConfig.ERR_TAG, "imgPath:" + activeComms.getIMG_PATH());                simpleDraweeView.setImageURI(Uri.parse(activeComms.getIMG_PATH()));            }        }    }    /**     * 推荐商品的分类     */    private class TuijianCommCatAdapter extends BaseQuickAdapter<HomePageModel.CLASS> {        public TuijianCommCatAdapter() {            super(R.layout.item_find_tuijian, list1);        }        @Override        protected void convert(BaseViewHolder baseViewHolder, HomePageModel.CLASS classess) {            baseViewHolder.setText(R.id.text, StringUtils.deletaFirst(classess.getCLASSNAME()));            if (index.equals(classess.getCLASSCODE())) {                baseViewHolder.setTextColor(R.id.text, getResources().getColor(R.color.base_bar))                        .setVisible(R.id.views, true);            } else {                baseViewHolder.setTextColor(R.id.text, getResources().getColor(R.color.font_black2))                        .setVisible(R.id.views, false);            }        }    }    /**     * 推荐的商品     */    private class TuijianCommAdapter extends BaseQuickAdapter<HomePageModel.DETAILS> {        public TuijianCommAdapter() {            super(R.layout.item_find_snap, list2);        }        @Override        protected void convert(BaseViewHolder baseViewHolder, HomePageModel.DETAILS details) {            baseViewHolder.setText(R.id.name, StringUtils.deletaFirst(details.getWARENAME()))                    .setText(R.id.money, "￥" + Utils.formatFee(details.getSALEPRICE() + ""));            SimpleDraweeView simpleDraweeView = baseViewHolder.getView(R.id.head_img);            if (!StringUtils.isEmpty(details.getIMG_PATH())) {                simpleDraweeView.setImageURI(Uri.parse(details.getIMG_PATH()));            }        }    }    private class ActiveListner implements View.OnClickListener {        private final String mtd;        public ActiveListner(String mtd) {            this.mtd = mtd;        }        @Override        public void onClick(View v) {            Intent it = HuoDongActivity.getIntent(getActivity(), mtd);            getActivity().startActivity(it);        }    }    //显示客服 或者 电话 的 模态窗口    public void showConsultImtes(int viewX, int viewY) {        if (dialogConsult == null) {            dialogConsult = new Dialog(getActivity(), R.style.Theme_AppCompat_Dialog);            LayoutInflater inflater = getActivity().getLayoutInflater();            View layout = inflater.inflate(R.layout.fragment_consult_items, null);            View itemKefu = layout.findViewById(R.id.fragment_consult_ll_kefu);            itemKefu.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    dialogConsult.dismiss();                    activity.openChat("首页咨询", "", AppConfig.CHAT_XN_LJT_SETTINGID1, AppConfig.CHAT_XN_LJT_TITLE1, false, "");                }            });            View itemTel = layout.findViewById(R.id.fragment_consult_ll_tel);            itemTel.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    dialogConsult.dismiss();                    Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:" + AppConfig.LJG_TEL));                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);                    startActivity(intent);                }            });            dialogConsult.setContentView(layout);            dialogConsult.setCancelable(true);            Window dialogWindow = dialogConsult.getWindow();//        dialogWindow.clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);            dialogWindow.setGravity(Gravity.BOTTOM | Gravity.RIGHT);            //显示的坐标            WindowManager.LayoutParams lp = dialogWindow.getAttributes();            //获取整个屏幕的宽度和高度            WindowManager wm = (WindowManager) getContext()                    .getSystemService(Context.WINDOW_SERVICE);//            int wWidth = wm.getDefaultDisplay().getWidth();            int wHeight = wm.getDefaultDisplay().getHeight();            lp.y = wHeight - viewY;            //内容 透明度//            Log.e(AppConfig.ERR_TAG, lp.y + ":" + lp.x);//        lp.alpha = 0.2f;            //遮罩 透明度            lp.dimAmount = 0.2f;//        //dialog的大小            dialogWindow.setAttributes(lp);        }        dialogConsult.show();    }    public void setLocation() {        if (SingleCurrentUser.location != null && SingleCurrentUser.location.getAddrStr() != null && !SingleCurrentUser.location.getAddrStr().equals(tvLocation.getText())) {            tvLocation.setText(SingleCurrentUser.location.getAddrStr());            getHome();        }    }    private void handleHuodongImg(final Map<String, Object> m, ImageView iv, int placeholder) {        if (m == null) return;        if (iv == null) return;        iv.setVisibility(View.GONE);        if ("0".equals(m.get("delFlg"))) {            iv.setVisibility(View.VISIBLE);            String headImgsUrl = (String) m.get("headImgsUrl");            String advertizeShowName = (String) m.get("ADVERTIZE_SHOW_NAME");            iv.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    MainActivity.navPage(getActivity(), m);                }            });            if (!StringUtils.isEmpty(headImgsUrl)) {                Picasso.with(getActivity()).load(Uri.parse(headImgsUrl)).placeholder(placeholder).into(iv);            }        }    }    private void handleIconClick(Map mItem) {        if (mItem == null) return;        MainActivity.navPage(getActivity(), mItem);    }    class IconListAdapter extends RecyclerView.Adapter<IconListViewHolder> {        private final Context context;        private final List<Map<String, String>> list;        LayoutInflater inflater;        public IconListAdapter(Context mContext, List<Map<String, String>> list) {            inflater = LayoutInflater.from(mContext);            this.context = mContext;            this.list = list;        }        @Override        public IconListViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {            View itemBanner = inflater.inflate(R.layout.item_fragment_home_iconlist, parent, false);            return new IconListViewHolder(itemBanner);        }        @Override        public void onBindViewHolder(IconListViewHolder holder, int position) {            Map<String, String> itemData = list.get(position);            holder.data = itemData;            holder.tvCatName.setText(itemData.get("advertizeShowName"));            String imgUrl = itemData.get("headImgsUrl");            Picasso.with(context).load(imgUrl).into(holder.sdvIcon);            if (ivHuodongIconListBg != null && ivHuodongIconListBg.getVisibility() == View.VISIBLE) {                holder.tvCatName.setTextColor(getResources().getColor(R.color.white));            } else {                holder.tvCatName.setTextColor(getResources().getColor(R.color.font_1));            }        }        @Override        public int getItemCount() {            if (list == null) return 0;            return list.size();        }    }    class IconListViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {        Map<String, String> data;        TextView tvCatName;        ImageView sdvIcon;        public IconListViewHolder(View itemView) {            super(itemView);            sdvIcon = (ImageView) itemView.findViewById(R.id.item_fragment_home_iconlist_icon);            tvCatName = (TextView) itemView.findViewById(R.id.item_fragment_home_iconlist_name);            itemView.setOnClickListener(this);        }        @Override        public void onClick(View v) {            handleIconClick(data);//            Intent it = ActivityGoodsList.getIntent(context, data.getCommodityTypeId());//            context.startActivity(it);        }    }    /**     * 活动版块功能图标     */    class HuodongListAdapter extends RecyclerView.Adapter<HuodongIconViewHolder> {        private final Context context;        private final List<Map<String, Object>> list;        LayoutInflater inflater;        public HuodongListAdapter(Context mContext, List<Map<String, Object>> list) {            inflater = LayoutInflater.from(mContext);            this.context = mContext;            this.list = list;        }        @Override        public HuodongIconViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {            View view = inflater.inflate(R.layout.item_fragment_find_huodongicon, parent, false);            return new HuodongIconViewHolder(view);        }        @Override        public void onBindViewHolder(HuodongIconViewHolder holder, int position) {            Map<String, Object> itemData = list.get(position);            holder.data = itemData;            String imgUrl = (String) itemData.get("headImgsUrl");            Picasso.with(context).load(imgUrl).into(holder.sdvIcon);        }        @Override        public int getItemCount() {            if (list == null) return 0;            return list.size();        }    }    /**     * 活动版块功能图标     */    class HuodongIconViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {        Map<String, Object> data;        ImageView sdvIcon;        public HuodongIconViewHolder(View itemView) {            super(itemView);            sdvIcon = (ImageView) itemView.findViewById(R.id.item_fragment_iv_huodongicon);            itemView.setOnClickListener(this);        }        @Override        public void onClick(View v) {            handleIconClick(data);        }    }    /**     * 底部广告图     */    class AdvListAdapter extends RecyclerView.Adapter<AdvImgListViewHolder> {        private final Context context;        private final List<Map<String, Object>> list;        LayoutInflater inflater;        public AdvListAdapter(Context mContext, List<Map<String, Object>> list) {            inflater = LayoutInflater.from(mContext);            this.context = mContext;            this.list = list;        }        @Override        public AdvImgListViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {            View itemBanner = inflater.inflate(R.layout.item_fragment_find_huodongimgs, parent, false);            return new AdvImgListViewHolder(itemBanner);        }        @Override        public void onBindViewHolder(AdvImgListViewHolder holder, int position) {            Map<String, Object> itemData = list.get(position);            holder.data = itemData;            String imgUrl = (String) itemData.get("headImgsUrl");            Picasso.with(context).load(imgUrl).placeholder(R.drawable.img_adv_zhanwei).into(holder.sdvIcon);        }        @Override        public int getItemCount() {            if (list == null) return 0;            Utils.log("list getItemCount:" + list.size());            return list.size();        }    }    class AdvImgListViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {        Map<String, Object> data;        ImageView sdvIcon;        public AdvImgListViewHolder(View itemView) {            super(itemView);            sdvIcon = (ImageView) itemView.findViewById(R.id.item_fragment_iv_huodongimgs);            itemView.setOnClickListener(this);        }        @Override        public void onClick(View v) {            handleIconClick(data);        }    }    @Override    public void onDestroy() {        super.onDestroy();        if (timer != null)            timer.cancel();    }}